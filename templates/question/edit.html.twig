{% extends 'base3.html.twig' %}

{% block title %}{{ editMode ? 'Modifier' : 'Ajouter' }} une question{% endblock %}

{% block body %}
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12">
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-title">{{ editMode ? 'Modifier' : 'Ajouter' }} une question</h3>
                    </div>
                    <div class="card-body">
                        {{ form_start(form) }}
                            <div class="form-group">
                                {{ form_label(form.title) }}
                                {{ form_widget(form.title, {'attr': {'class': 'form-control'}}) }}
                                {{ form_errors(form.title) }}
                            </div>

                            <div class="form-group mt-4">
                                {{ form_label(form.enonce) }}
                                {{ form_widget(form.enonce) }}
                                {{ form_errors(form.enonce) }}
                            </div>

                            <div class="form-group mt-4">
                                {{ form_label(form.codeSnippet) }}
                                {{ form_widget(form.codeSnippet) }}
                                <small class="form-text text-muted">Utilisez ce champ pour ajouter du code à votre question.</small>
                                {{ form_errors(form.codeSnippet) }}
                            </div>

                            <div class="form-group mt-4">
                                {{ form_label(form.programmingLanguage) }}
                                {{ form_widget(form.programmingLanguage, {'attr': {'class': 'form-control'}}) }}
                                <small class="form-text text-muted">Sélectionnez le langage de programmation pour la coloration syntaxique.</small>
                                {{ form_errors(form.programmingLanguage) }}
                            </div>

                            <div class="form-group mt-4">
                                {{ form_label(form.ordreQuestion) }}
                                {{ form_widget(form.ordreQuestion, {'attr': {'class': 'form-control'}}) }}
                                {{ form_errors(form.ordreQuestion) }}
                            </div>

                            <div class="mt-4">
                                <button type="submit" class="btn btn-primary">
                                    {{ editMode ? 'Modifier' : 'Ajouter' }}
                                </button>
                                <a href="{{ path('app_question_index', {'evaluationId': question.evaluation.id}) }}" class="btn btn-secondary">Retour à la liste</a>
                            </div>
                        {{ form_end(form) }}
                    </div>
                </div>

                {% if form.codeSnippet is defined and form.codeSnippet.vars.value %}
                    <div class="card mt-4">
                        <div class="card-header">
                            <h3 class="card-title">Aperçu du code</h3>
                        </div>
                        <div class="card-body">
                            <pre><code class="{{ form.programmingLanguage.vars.value }}">{{ form.codeSnippet.vars.value }}</code></pre>
                        </div>
                    </div>
                {% endif %}
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Initialisation de l'éditeur TinyMCE
            tinymce.init({
                selector: '.tinymce-editor',
                height: 300,
                menubar: true,
                plugins: [
                    'advlist', 'autolink', 'lists', 'link', 'image', 'charmap', 'preview',
                    'anchor', 'searchreplace', 'visualblocks', 'code', 'fullscreen',
                    'insertdatetime', 'media', 'table', 'help', 'wordcount', 'codesample'
                ],
                toolbar: 'undo redo | blocks | bold italic backcolor | ' +
                        'alignleft aligncenter alignright alignjustify | ' +
                        'bullist numlist outdent indent | removeformat | codesample | help',
                content_style: 'body { font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif; font-size: 16px; }',
                codesample_languages: [
                    { text: 'HTML/XML', value: 'markup' },
                    { text: 'JavaScript', value: 'javascript' },
                    { text: 'CSS', value: 'css' },
                    { text: 'PHP', value: 'php' },
                    { text: 'Python', value: 'python' },
                    { text: 'Java', value: 'java' },
                    { text: 'C', value: 'c' },
                    { text: 'SQL', value: 'sql' }
                ]
            });

            // Initialisation de highlight.js pour l'aperçu du code
            document.querySelectorAll('pre code').forEach((block) => {
                hljs.highlightBlock(block);
            });

            // Mise à jour de l'aperçu du code en temps réel
            const codeSnippetInput = document.querySelector('#question_codeSnippet');
            const languageSelect = document.querySelector('#question_programmingLanguage');
            
            if (codeSnippetInput && languageSelect) {
                const updatePreview = () => {
                    const previewContainer = document.querySelector('.code-preview');
                    if (previewContainer) {
                        const code = codeSnippetInput.value;
                        const language = languageSelect.value;
                        previewContainer.innerHTML = `<pre><code class="${language}">${code}</code></pre>`;
                        hljs.highlightBlock(previewContainer.querySelector('code'));
                    }
                };

                codeSnippetInput.addEventListener('input', updatePreview);
                languageSelect.addEventListener('change', updatePreview);
            }
        });
    </script>
{% endblock %}