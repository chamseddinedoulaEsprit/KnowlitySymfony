{% extends 'base3.html.twig' %}

{% block title %}Evaluation{% endblock %}

{% block stylesheets %}
    {{ parent() }}

    <style>
        :root {
            --primary-gradient: linear-gradient(135deg, #6366f1 0%, #8b5cf6 100%);
            --secondary-gradient: linear-gradient(135deg, #3b82f6 0%, #2dd4bf 100%);
            --accent-gradient: linear-gradient(135deg, #f59e0b 0%, #ef4444 100%);
            --dark-gradient: linear-gradient(135deg, #1e293b 0%, #334155 100%);
        }

        .page-container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 2rem;
        }

        .page-header {
            background: var(--primary-gradient);
            color: white;
            padding: 2.5rem;
            margin: -2rem -2rem 2rem -2rem;
            border-radius: 0 0 2rem 2rem;
            box-shadow: 0 10px 30px rgba(99, 102, 241, 0.2);
        }

        .header-content {
            max-width: 1400px;
            margin: 0 auto;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .header-title {
            font-size: 2rem;
            font-weight: 700;
            margin: 0;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.1);
        }

        .header-actions {
            display: flex;
            gap: 1rem;
        }

        .content-grid {
            display: grid;
            grid-template-columns: 2fr 1fr;
            gap: 2rem;
            margin-top: 2rem;
        }

        .card {
            background: white;
            border-radius: 1.5rem;
            box-shadow: 0 10px 30px rgba(0,0,0,0.05);
            overflow: hidden;
            border: 1px solid rgba(0,0,0,0.05);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 40px rgba(0,0,0,0.1);
        }

        .card-header {
            background: var(--dark-gradient);
            color: white;
            padding: 1.5rem;
            font-size: 1.25rem;
            font-weight: 600;
        }

        .card-body {
            padding: 1.5rem;
        }

        .info-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 1.5rem;
            margin-bottom: 2rem;
        }

        .info-item {
            background: #f8fafc;
            padding: 1.5rem;
            border-radius: 1rem;
            border: 1px solid rgba(0,0,0,0.05);
        }

        .info-label {
            color: #64748b;
            font-size: 0.875rem;
            text-transform: uppercase;
            letter-spacing: 0.05em;
            margin-bottom: 0.5rem;
        }

        .info-value {
            font-size: 1.25rem;
            font-weight: 600;
            color: #1e293b;
        }

        .btn {
            padding: 0.75rem 1.5rem;
            border-radius: 0.75rem;
            font-weight: 600;
            transition: all 0.3s ease;
            text-transform: uppercase;
            letter-spacing: 0.05em;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            border: none;
        }

        .btn-primary {
            background: var(--primary-gradient);
            color: white;
        }

        .btn-secondary {
            background: var(--secondary-gradient);
            color: white;
        }

        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 20px rgba(0,0,0,0.1);
        }

        .status-badge {
            padding: 0.5rem 1rem;
            border-radius: 2rem;
            font-weight: 600;
            font-size: 0.875rem;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
        }

        .status-badge.pending {
            background: linear-gradient(135deg, #fbbf24 0%, #f59e0b 100%);
            color: white;
        }

        .status-badge.completed {
            background: linear-gradient(135deg, #10b981 0%, #059669 100%);
            color: white;
        }

        .action-buttons {
            display: flex;
            gap: 1rem;
            margin-top: 1.5rem;
        }

        .questions-list {
            display: grid;
            gap: 1.5rem;
        }

        .question-item {
            padding: 1.5rem;
            background: white;
            border-radius: 1rem;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
            margin-bottom: 1rem;
            border: 1px solid rgba(0, 0, 0, 0.05);
            transition: all 0.3s ease;
        }

        .question-item:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 15px rgba(0, 0, 0, 0.1);
        }

        .question-item h3 {
            font-size: 1.25rem;
            font-weight: 600;
            color: #1e293b;
            margin-bottom: 0.5rem;
        }

        .question-actions {
            display: flex;
            gap: 0.5rem;
            align-items: center;
        }

        .btn-sm {
            padding: 0.4rem 0.8rem;
            font-size: 0.875rem;
            border-radius: 0.5rem;
        }

        .btn-info {
            background: linear-gradient(135deg, #0ea5e9 0%, #0284c7 100%);
            color: white;
        }

        .btn-warning {
            background: linear-gradient(135deg, #f59e0b 0%, #d97706 100%);
            color: white;
        }

        .text-muted {
            color: #64748b;
            font-size: 0.875rem;
        }

        .mb-0 {
            margin-bottom: 0;
        }

        .mt-4 {
            margin-top: 2rem;
        }

        .d-flex {
            display: flex;
        }

        .justify-content-between {
            justify-content: space-between;
        }

        .align-items-center {
            align-items: center;
        }

        .btn-group {
            display: flex;
            gap: 0.5rem;
        }

        form {
            display: inline-block;
        }

        .delete-form button {
            background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);
            color: white;
            border: none;
            padding: 0.4rem 0.8rem;
            border-radius: 0.5rem;
            cursor: pointer;
            font-size: 0.875rem;
            transition: all 0.3s ease;
        }

        .delete-form button:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 6px rgba(220, 38, 38, 0.2);
        }

        @media (max-width: 1024px) {
            .content-grid {
                grid-template-columns: 1fr;
            }
        }

        @media (max-width: 768px) {
            .page-container {
                padding: 1rem;
            }

            .header-content {
                flex-direction: column;
                gap: 1rem;
                text-align: center;
            }

            .info-grid {
                grid-template-columns: 1fr;
            }
        }
    </style>
   
{% endblock %}

{% block body %}
    <div class="page-container">
        <header class="page-header">
            <div class="header-content">
                <h1 class="header-title">{{ evaluation.title }}</h1>
                <div class="header-actions">
                    <a href="{{ path('app_cours', {'id': evaluation.cours.id}) }}" class="btn btn-secondary">
                        <i class="fas fa-arrow-left"></i>
                        Retour au cours
                    </a>
                </div>
            </div>
        </header>

        

        <div class="content-grid">
            <div class="main-content">
                <div class="card">
                    <div class="card-header">
                        Informations de l'évaluation
                    </div>
                    <div class="card-body">
                        <div class="info-grid">
                            <div class="info-item">
                                <div class="info-label">Date de création</div>
                                <div class="info-value">{{ evaluation.getCreateAt()|date('d/m/Y') }}</div>
                            </div>
                            <div class="info-item">
                                <div class="info-label">Date limite</div>
                                <div class="info-value">{{ evaluation.deadline|date('d/m/Y H:i') }}</div>
                            </div>
                            <div class="info-item">
                                <div class="info-label">Statut</div>
                                <div class="info-value">
                                    {% if evaluation.deadline > date() %}
                                        <span class="status-badge pending">
                                            <i class="fas fa-clock"></i>
                                            En cours
                                        </span>
                                    {% else %}
                                        <span class="status-badge completed">
                                            <i class="fas fa-check"></i>
                                            Terminé
                                        </span>
                                    {% endif %}
                                </div>
                            </div>
                            <div class="info-item">
                                <div class="info-label">Nombre de questions</div>
                                <div class="info-value">{{ evaluation.questions|length }}</div>
                            </div>
                            <div class="info-item">
                                <div class="info-label">Score Maximum</div>
                                <div class="info-value">{{ evaluation.maxScore }} points</div>
                            </div>
                            <div class="info-item">
                                <div class="info-label">Nombre de réponses</div>
                                <div class="info-value">{{ evaluation.reponses|length }}</div>
                            </div>
                        </div>

                        <div class="action-buttons">
                            <a href="{{ path('app_evaluation_editenseignant', {'id': evaluation.id}) }}" class="btn btn-primary">
                                <i class="fas fa-edit"></i>
                                Modifier l'évaluation
                            </a>
                            {% if evaluation.deadline > date() %}
                            <a href="{{ path('app_evaluation_student_list', {'evaluationId': evaluation.id}) }}" class="btn btn-secondary">
                                <i class="fas fa-check"></i>
                                Corriger
                            </a>
                            {% else %}
                            <a href="{{ path('app_evaluation_student_list', {'evaluationId': evaluation.id}) }}" class="btn btn-secondary">
                                <i class="fas fa-redo"></i>
                                Recorriger
                            </a>
                            {% endif %}
                            
                            <a href="{{ path('app_question_new', {'evaluationId': evaluation.id}) }}" class="btn btn-primary">
                                <i class="fas fa-plus"></i>
                                Ajouter une question
                            </a>
                            
                            <a href="{{ path('app_evaluation_statistics', {'id': evaluation.id}) }}" class="btn btn-secondary">
                                <i class="fas fa-chart-bar"></i>
                                Statistiques
                            </a>
                        </div>
                    </div>
                </div>

                {% if evaluation.questions is not empty %}
                <div class="card mt-4">
                    <div class="card-header">
                        Questions ({{ evaluation.questions|length }})
                    </div>
                    <div class="card-body">
                        <div class="questions-list">
                            {% for question in evaluation.questions %}
                            <div class="question-item">
                                <div class="d-flex justify-content-between align-items-center">
                                    <h3>{{ question.enonce }}</h3>
                                    <div class="question-actions">
                                        <a href="{{ path('app_question_show', {'id': question.id}) }}" class="btn btn-sm btn-info">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                        <a href="{{ path('app_question_edit', {'id': question.id}) }}" class="btn btn-sm btn-warning">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                        {{ include('question/_delete_form.html.twig') }}
                                    </div>
                                </div>
                                <p class="mb-0">{{ question.point }} points</p>
                                <p class="text-muted">Ordre: {{ question.ordreQuestion }}</p>
                            </div>
                            {% endfor %}
                        </div>
                    </div>
                </div>
                {% endif %}
            </div>

            <div class="sidebar">
            </div>
        </div>
    </div>
{% endblock %}